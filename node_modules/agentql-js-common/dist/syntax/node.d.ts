interface NodeInterface {
    name: string;
    description: string | null;
    get queryName(): string;
    get queryDescription(): string;
    dump(level: number, indent: number): string;
    getChildByName(name: string): NodeInterface;
}
declare class BaseNode implements NodeInterface {
    name: string;
    description: string | null;
    constructor(name: string, description: string | null);
    get queryName(): string;
    get queryDescription(): string;
    dump(level?: number, indent?: number): string;
    getChildByName(name: string): BaseNode;
}
declare class IdNode extends BaseNode {
}
declare class IdListNode extends IdNode {
    get queryName(): string;
}
declare class ContainerNode extends BaseNode {
    children: BaseNode[];
    constructor(name: string, description: string | null, children?: BaseNode[]);
    dump(level?: number, indent?: number): string;
    getChildByName(name: string): BaseNode;
    getTerms(): Set<string>;
}
declare class ContainerListNode extends ContainerNode {
    get queryName(): string;
}
export { NodeInterface, BaseNode, IdNode, IdListNode, ContainerNode, ContainerListNode };
//# sourceMappingURL=node.d.ts.map