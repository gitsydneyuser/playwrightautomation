"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PageCrashError = exports.PageMonitorNotInitializedError = exports.AttributeNotFoundError = exports.ElementNotFoundError = exports.AccessibilityTreeError = exports.AgentQLServerError = exports.AgentQLServerTimeoutError = exports.APIKeyError = exports.BaseAgentQLError = exports.AGENTQL_1012_PAGE_MONITOR_NOT_INITIALIZED_ERROR = exports.AGENTQL_2001_SERVER_TIMEOUT_ERROR = exports.AGENTQL_2000_SERVER_ERROR = exports.AGENTQL_1010_QUERY_SYNTAX_ERROR = exports.AGENTQL_1006_ELEMENT_NOT_FOUND_ERROR = exports.AGENTQL_1005_ACCESSIBILITY_TREE_ERROR = exports.AGENTQL_1001_ATTRIBUTE_NOT_FOUND_ERROR = exports.AGENTQL_1000_API_KEY_ERROR = void 0;
const AGENTQL_1000_API_KEY_ERROR = 1000;
exports.AGENTQL_1000_API_KEY_ERROR = AGENTQL_1000_API_KEY_ERROR;
const AGENTQL_1001_ATTRIBUTE_NOT_FOUND_ERROR = 1001;
exports.AGENTQL_1001_ATTRIBUTE_NOT_FOUND_ERROR = AGENTQL_1001_ATTRIBUTE_NOT_FOUND_ERROR;
const AGENTQL_1005_ACCESSIBILITY_TREE_ERROR = 1005;
exports.AGENTQL_1005_ACCESSIBILITY_TREE_ERROR = AGENTQL_1005_ACCESSIBILITY_TREE_ERROR;
const AGENTQL_1006_ELEMENT_NOT_FOUND_ERROR = 1006;
exports.AGENTQL_1006_ELEMENT_NOT_FOUND_ERROR = AGENTQL_1006_ELEMENT_NOT_FOUND_ERROR;
const AGENTQL_1010_QUERY_SYNTAX_ERROR = 1010;
exports.AGENTQL_1010_QUERY_SYNTAX_ERROR = AGENTQL_1010_QUERY_SYNTAX_ERROR;
const AGENTQL_1012_PAGE_MONITOR_NOT_INITIALIZED_ERROR = 1012;
exports.AGENTQL_1012_PAGE_MONITOR_NOT_INITIALIZED_ERROR = AGENTQL_1012_PAGE_MONITOR_NOT_INITIALIZED_ERROR;
const AGENTQL_1013_PAGE_CRASH_ERROR = 1013;
const AGENTQL_2000_SERVER_ERROR = 2000;
exports.AGENTQL_2000_SERVER_ERROR = AGENTQL_2000_SERVER_ERROR;
const AGENTQL_2001_SERVER_TIMEOUT_ERROR = 2001;
exports.AGENTQL_2001_SERVER_TIMEOUT_ERROR = AGENTQL_2001_SERVER_TIMEOUT_ERROR;
const SUPPORT_MESSAGE = `
If the issue persists, please reach out for further assistance through support@tinyfish.io or Tiny Fish Discord channel https://discord.gg/agentql.
`.trim();
const REQUEST_ID_MESSAGE = `
Include this Request ID when contacting support for quicker assistance:
`.trim();
class BaseAgentQLError extends Error {
    constructor(message, code = 0, requestId = '', includeFallbackMessage = true) {
        super(message +
            (includeFallbackMessage ? ` ${SUPPORT_MESSAGE}` : '') +
            (requestId ? ` ${REQUEST_ID_MESSAGE} ${requestId}` : ''));
        this.name = this.constructor.name;
        this.code = code;
        this.requestId = requestId;
    }
}
exports.BaseAgentQLError = BaseAgentQLError;
const DEFAULT_APIKEY_ERROR_MESSAGE = `
Invalid or missing API key. Please set the environment variable 'AGENTQL_API_KEY' with a valid API key.
`.trim();
class APIKeyError extends BaseAgentQLError {
    constructor(message = DEFAULT_APIKEY_ERROR_MESSAGE, requestId = '') {
        super(message, AGENTQL_1000_API_KEY_ERROR, requestId, false);
    }
}
exports.APIKeyError = APIKeyError;
const SERVER_TIMEOUT_ERROR_MESSAGE = `
The request has timed out because it took longer than the set timeout.
Please, consider increasing the timeout value by passing the \`timeout\` argument to the \`get_by_prompt\`, \`query_elements\` or \`query_data\` method.
For complex requests on lengthy pages or large responses, request can take as much as 15 minutes to process.
`
    .trim()
    .replace(/\n/g, ' ');
class AgentQLServerTimeoutError extends BaseAgentQLError {
    constructor() {
        super(SERVER_TIMEOUT_ERROR_MESSAGE, AGENTQL_2001_SERVER_TIMEOUT_ERROR);
    }
}
exports.AgentQLServerTimeoutError = AgentQLServerTimeoutError;
const DEFAULT_SERVER_ERROR_MESSAGE = `
AgentQL Server Error. Please try again.
`.trim();
class AgentQLServerError extends BaseAgentQLError {
    constructor(message = DEFAULT_SERVER_ERROR_MESSAGE, code = AGENTQL_2000_SERVER_ERROR, requestId = '') {
        super(message, code, requestId);
    }
}
exports.AgentQLServerError = AgentQLServerError;
const ACCESSIBILITY_TREE_ERROR_MESSAGE = `
An error occurred while generating accessibility tree.
The page may no longer be available due to navigation or being closed. 
`.trim();
class AccessibilityTreeError extends BaseAgentQLError {
    constructor() {
        super(ACCESSIBILITY_TREE_ERROR_MESSAGE, AGENTQL_1005_ACCESSIBILITY_TREE_ERROR);
    }
}
exports.AccessibilityTreeError = AccessibilityTreeError;
class ElementNotFoundError extends BaseAgentQLError {
    constructor(elementId = null) {
        let message;
        if (elementId) {
            message = `The element with ID ${elementId} could not be found on the current page anymore.`;
        }
        else {
            message = `The element could not be found on the current page anymore.`;
        }
        super(message, AGENTQL_1006_ELEMENT_NOT_FOUND_ERROR);
    }
}
exports.ElementNotFoundError = ElementNotFoundError;
class PageMonitorNotInitializedError extends BaseAgentQLError {
    constructor() {
        super('Page Monitor is not initialized. Please call page.goto() before calling waitForPageReadyState().', AGENTQL_1012_PAGE_MONITOR_NOT_INITIALIZED_ERROR);
    }
}
exports.PageMonitorNotInitializedError = PageMonitorNotInitializedError;
class AttributeNotFoundError extends BaseAgentQLError {
    constructor(name, response_data, query_tree_node) {
        if (query_tree_node.name) {
            response_data = { [query_tree_node.name]: response_data };
        }
        const message = `
    "${name}" not found in AgentQL response node:
    ${JSON.stringify(response_data, null, 2)}
    There could be a few reasons for this:
    1. The element you are trying to access was not part of the original query. Make sure there are no typos in the name of the element you are trying to access.

    Query:
    ${query_tree_node.dump()}

    Note that empty spaces and new lines are used to indicate distinct elements. Do verify that you are using empty spaces and new lines correctly in your query. If you want to use multiple words to describe the same element, please use underscores instead. I.e. "search_button".

    2. You may be trying to execute an action on a container node. I.e. the following would raise this error:
    Query:
    {
        footer {
            some_link
        }
    }

    response.footer.click()

    In the above example, footer is a container node and you are trying to click on it. You should access the child node instead. I.e. response.footer.some_link.click()
    `.trim();
        super(message, AGENTQL_1001_ATTRIBUTE_NOT_FOUND_ERROR);
    }
}
exports.AttributeNotFoundError = AttributeNotFoundError;
class PageCrashError extends BaseAgentQLError {
    constructor(url) {
        super(`Page crashed: ${url}`, AGENTQL_1013_PAGE_CRASH_ERROR);
    }
}
exports.PageCrashError = PageCrashError;
